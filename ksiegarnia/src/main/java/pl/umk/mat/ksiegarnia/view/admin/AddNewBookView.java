/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pl.umk.mat.ksiegarnia.view.admin;

import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;

import pl.umk.mat.ksiegarnia.model.book.BookAuthor;
import pl.umk.mat.ksiegarnia.model.book.BookPBH;
import pl.umk.mat.ksiegarnia.view.services.ServicesView;

/**
 *
 * @author Mariusz
 */
public class AddNewBookView extends ServicesView{

    /**
     * Creates new form AddNewBook
     */
	public AddNewBookView() {
        initComponents();
        addNew.setSelected(false); selectExisting.setSelected(true); pbhName.setVisible(false); phonePhb.setVisible(false); mailPhb.setVisible(false);selectAuthor.setSelected(true); addAuthor.setSelected(false); 
        ComboBoxAuthors.setVisible(true); nameAuthor.setVisible(false);surnameAuthor.setVisible(false); mailAuthor.setVisible(false);AddInfo.setVisible(false);AddInfo2.setVisible(false);   
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bookTitle = new javax.swing.JTextField();
        nameAuthor = new javax.swing.JTextField();
        surnameAuthor = new javax.swing.JTextField();
        mailAuthor = new javax.swing.JTextField();
        pbhName = new javax.swing.JTextField();
        phonePhb = new javax.swing.JTextField();
        mailPhb = new javax.swing.JTextField();
        priceBook = new javax.swing.JTextField();
        data = new javax.swing.JTextField();
        ComboBoxPBH = new javax.swing.JComboBox<>();
        selectExisting = new javax.swing.JRadioButton();
        addNew = new javax.swing.JRadioButton();
        ComboBoxAuthors = new javax.swing.JComboBox<>();
        addAuthor = new javax.swing.JRadioButton();
        selectAuthor = new javax.swing.JRadioButton();
        AdminMenu = new javax.swing.JButton();
        AddNewBook = new javax.swing.JButton();
        AddInfo = new javax.swing.JLabel();
        AddInfo2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(435, 635));
        getContentPane().setLayout(null);
        getContentPane().add(bookTitle);
        bookTitle.setBounds(150, 40, 170, 30);
        getContentPane().add(nameAuthor);
        nameAuthor.setBounds(150, 150, 169, 30);
        getContentPane().add(surnameAuthor);
        surnameAuthor.setBounds(150, 190, 169, 30);
        getContentPane().add(mailAuthor);
        mailAuthor.setBounds(150, 230, 169, 30);
        getContentPane().add(pbhName);
        pbhName.setBounds(150, 340, 170, 30);
        getContentPane().add(phonePhb);
        phonePhb.setBounds(150, 380, 170, 30);
        getContentPane().add(mailPhb);
        mailPhb.setBounds(150, 420, 170, 30);
        getContentPane().add(priceBook);
        priceBook.setBounds(150, 500, 170, 30);
        getContentPane().add(data);
        data.setBounds(150, 460, 170, 30);

        getContentPane().add(ComboBoxPBH);
        ComboBoxPBH.setBounds(90, 350, 260, 29);

        selectExisting.setContentAreaFilled(false);
        selectExisting.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        selectExisting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectExistingActionPerformed(evt);
            }
        });
        getContentPane().add(selectExisting);
        selectExisting.setBounds(270, 310, 130, 30);

        addNew.setContentAreaFilled(false);
        addNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewActionPerformed(evt);
            }
        });
        getContentPane().add(addNew);
        addNew.setBounds(50, 310, 120, 30);

        getContentPane().add(ComboBoxAuthors);
        ComboBoxAuthors.setBounds(90, 150, 260, 28);

        addAuthor.setContentAreaFilled(false);
        addAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAuthorActionPerformed(evt);
            }
        });
        getContentPane().add(addAuthor);
        addAuthor.setBounds(50, 110, 120, 20);

        selectAuthor.setContentAreaFilled(false);
        selectAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectAuthorActionPerformed(evt);
            }
        });
        getContentPane().add(selectAuthor);
        selectAuthor.setBounds(270, 110, 130, 20);

        AdminMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ksiegarnia/img/menu.jpg"))); // NOI18N
        AdminMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AdminMenuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AdminMenuMouseExited(evt);
            }
        });
        getContentPane().add(AdminMenu);
        AdminMenu.setBounds(50, 550, 100, 30);

        AddNewBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ksiegarnia/img/Dodaj.jpg"))); // NOI18N
        AddNewBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AddNewBookMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AddNewBookMouseExited(evt);
            }
        });
        getContentPane().add(AddNewBook);
        AddNewBook.setBounds(260, 550, 100, 30);

        AddInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ksiegarnia/img/ImieNazwiskoMail1.gif"))); // NOI18N
        getContentPane().add(AddInfo);
        AddInfo.setBounds(30, 140, 120, 140);

        AddInfo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ksiegarnia/img/NazwaTelefonMail1.gif"))); // NOI18N
        getContentPane().add(AddInfo2);
        AddInfo2.setBounds(50, 330, 110, 140);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ksiegarnia/img/TÅ‚o1.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 450, 600);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectExistingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectExistingActionPerformed
        addNew.setSelected(false);AddInfo2.setVisible(false);ComboBoxPBH.setVisible(true);pbhName.setVisible(false);phonePhb.setVisible(false);mailPhb.setVisible(false);
    }//GEN-LAST:event_selectExistingActionPerformed
    private void addNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewActionPerformed
        AddInfo2.setVisible(true);selectExisting.setSelected(false);ComboBoxPBH.setVisible(false);pbhName.setVisible(true);phonePhb.setVisible(true);mailPhb.setVisible(true);
    }//GEN-LAST:event_addNewActionPerformed
    private void selectAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectAuthorActionPerformed
        addAuthor.setSelected(false);ComboBoxAuthors.setVisible(true);nameAuthor.setVisible(false);surnameAuthor.setVisible(false);mailAuthor.setVisible(false);AddInfo.setVisible(false);
        
    }//GEN-LAST:event_selectAuthorActionPerformed
    private void addAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAuthorActionPerformed
        AddInfo.setVisible(true);selectAuthor.setSelected(false); ComboBoxAuthors.setVisible(false);nameAuthor.setVisible(true);surnameAuthor.setVisible(true);mailAuthor.setVisible(true);      
    }//GEN-LAST:event_addAuthorActionPerformed
    private void AdminMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdminMenuMouseEntered
        AdminMenu.setIcon(new ImageIcon(getClass().getResource("/ksiegarnia/img/MenuClick.jpg")));
    }//GEN-LAST:event_AdminMenuMouseEntered
    private void AddNewBookMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddNewBookMouseEntered
        AddNewBook.setIcon(new ImageIcon(getClass().getResource("/ksiegarnia/img/DodajClick.jpg")));
    }//GEN-LAST:event_AddNewBookMouseEntered

    private void AdminMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdminMenuMouseExited
        AdminMenu.setIcon(new ImageIcon(getClass().getResource("/ksiegarnia/img/menu.jpg")));
    }//GEN-LAST:event_AdminMenuMouseExited

            
    private void AddNewBookMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddNewBookMouseExited
        AddNewBook.setIcon(new ImageIcon(getClass().getResource("/ksiegarnia/img/Dodaj.jpg")));
    }//GEN-LAST:event_AddNewBookMouseExited


    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewBookView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewBookView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewBookView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewBookView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddNewBookView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddInfo;
    private javax.swing.JLabel AddInfo2;
    private javax.swing.JButton AddNewBook;
    private javax.swing.JButton AdminMenu;
    private javax.swing.JComboBox<String> ComboBoxAuthors;
    private javax.swing.JComboBox<String> ComboBoxPBH;
    private javax.swing.JRadioButton addAuthor;
    private javax.swing.JRadioButton addNew;
    private javax.swing.JTextField bookTitle;
    private javax.swing.JTextField data;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField mailAuthor;
    private javax.swing.JTextField mailPhb;
    private javax.swing.JTextField nameAuthor;
    private javax.swing.JTextField pbhName;
    private javax.swing.JTextField phonePhb;
    private javax.swing.JTextField priceBook;
    private javax.swing.JRadioButton selectAuthor;
    private javax.swing.JRadioButton selectExisting;
    private javax.swing.JTextField surnameAuthor;
    // End of variables declaration//GEN-END:variables
    
    
    /**
     * fills the comboBox all publishingHouse which exist in database
     * @param ArrayList<BookPBH>
     */
    public void fillPBHComboBox(ArrayList<BookPBH> allPBHs) {     
    	
    	for (BookPBH curPBH : allPBHs) {
    			ComboBoxPBH.addItem(curPBH.getName());
    		}

    }
    /**
     * fills the comboBox all authors who exist in database
     * @param ArrayList<BookAuthor>
     */
	public void fillAuthorComboBox(ArrayList<BookAuthor> allAuthors ) {
    	
    	for (BookAuthor curAuthor : allAuthors) {
    		ComboBoxAuthors.addItem(curAuthor.getName() + " " + curAuthor.getSurname());
    		}
    	
    }
	/**
	 * 
	 * @return true if admin want to add new author
	 */
	public Boolean isAuthorSelected()
    {
    	return addAuthor.isSelected();
    }
	/**
	 * 
	 * @return true if admin want to add new pbh
	 */
	public Boolean isAddNewSelected()
    {
    	return addNew.isSelected();
    }
	 /**
     * sets listener on button
     * @param listener
     */
    public void setAdminMenuActionListener(ActionListener listener)
    {
    	AdminMenu.addActionListener(listener);
    }
    /**
     * sets listener on button
     * @param listener
     */
    public void setAddNewBookActionListener(ActionListener listener)
    {
    	AddNewBook.addActionListener(listener);
    }
    /**
     * 
     * @return author name from fields in view
     */
    public String getAuthorName()
    {
    	return nameAuthor.getText();
    }
    /**
     * 
     * @return author surname from fields in view
     */
    public String getAuthorSurname()
    {
    	return surnameAuthor.getText();
    }
    /**
     * 
     * @return author mail from fields in view
     */
    public String getAuthorMail()
    {
    	return mailAuthor.getText();
    }
    /**
     * 
     * @return pbh name from fields in view
     */
    public String getPBHName()
    {
    	return pbhName.getText();
    }
    /**
     * 
     * @return pbh phone from fields in view
     */
    public String getPBHPhone()
    {
    	return phonePhb.getText();
    }
    /**
     * 
     * @return pbh mail from fields in view
     */
    public String getPBHMail()
    {
    	return mailPhb.getText();
    }
    /**
     * 
     * @return book title from fields in view
     */
    public String getBookTitle()
    {
    	return bookTitle.getText();
    }
    /**
     * 
     * @return book price from fields in view
     */
    public String getPriceBook()
    {
    	return priceBook.getText();
    }
    /**
     * 
     * @return book date from fields in view
     */
    public String getBookDate()
    {
    	return data.getText();
    }
    /**
     * 
     * @return selected author from box
     */
    public String getSelectedAuthor()
    {
    	return (String)ComboBoxAuthors.getSelectedItem();
    }
    /**
     * 
     * @return selected pbh from box
     */
    public String getSelectedPBH()
    {
    	return (String)ComboBoxPBH.getSelectedItem();
    }
}
